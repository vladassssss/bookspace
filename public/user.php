<?php
session_start();

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–≤—ñ–π—à–æ–≤ —É —Å–∏—Å—Ç–µ–º—É
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php"); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Ö–æ–¥—É, —è–∫—â–æ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
    exit();
}

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ (—è–∫ —ñ –Ω–∞ —ñ–Ω—à–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö)
require_once __DIR__ . '/../app/Database/Connection.php';
require_once __DIR__ . '/../app/Repositories/IBookstoreRepository.php';
require_once __DIR__ . '/../app/Repositories/BookstoreRepository.php';
require_once __DIR__ . '/../app/Repositories/IUserRepository.php'; 
require_once __DIR__ . '/../app/Repositories/UserRepository.php'; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —î —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
require_once __DIR__ . '/../app/Services/UserService.php'; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —î —Å–µ—Ä–≤—ñ—Å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
require_once __DIR__ . '/../app/Repositories/OrderRepositoryInterface.php';
require_once __DIR__ . '/../app/Repositories/OrderRepository.php'; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —î —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω—å
require_once __DIR__ . '/../app/Services/OrderServiceInterface.php';
require_once __DIR__ . '/../app/Services/OrderService.php'; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —î —Å–µ—Ä–≤—ñ—Å –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω—å
require_once __DIR__ . '/../app/Repositories/IWishlistRepository.php';
require_once __DIR__ . '/../app/Repositories/WishlistRepository.php'; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —î —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –¥–ª—è —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å
require_once __DIR__ . '/../app/Services/IWishlistService.php'; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —î —Å–µ—Ä–≤—ñ—Å –¥–ª—è —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å
require_once __DIR__ . '/../app/Services/WishlistService.php'; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —î —Å–µ—Ä–≤—ñ—Å –¥–ª—è —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å
require_once __DIR__ . '/../app/Models/CartItem.php';
require_once __DIR__ . '/../app/Repositories/CartRepository.php'; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —î —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –¥–ª—è –∫–æ—à–∏–∫–∞
require_once __DIR__ . '/../app/Services/CartService.php'; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —î —Å–µ—Ä–≤—ñ—Å –¥–ª—è –∫–æ—à–∏–∫–∞

use App\Database\Connection;
use App\Repositories\IBookstoreRepository;
use App\Repositories\BookstoreRepository;
use App\Repositories\UserRepository;
use App\Services\UserService;
use App\Repositories\OrderRepository;
use App\Services\OrderService;
use App\Repositories\WishlistRepository;
use App\Services\WishlistService;
use App\Repositories\CartRepository;
use App\Services\CartService;

$db = Connection::getInstance()->getConnection();
$userRepository = new UserRepository($db);
$userService = new UserService($userRepository);
$orderRepository = new OrderRepository($db);
$orderService = new OrderService($orderRepository);
$bookstoreRepository = new BookstoreRepository($db); // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ BookstoreRepository
$wishlistRepository = new WishlistRepository($db, $bookstoreRepository); // –ü–µ—Ä–µ–¥–∞—á–∞ –æ–±'—î–∫—Ç–∞ BookstoreRepository
$wishlistService = new WishlistService($wishlistRepository);
$cartRepository = new CartRepository($db);
$cartService = new CartService($cartRepository);

$userId = $_SESSION['user_id'];

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
$user = $userService->getUserById($userId);

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
$orders = $orderService->getUserOrders($userId);

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
$wishlistItems = $wishlistService->getUserWishlist($userId);

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
$cartItems = $cartService->getUserCart($userId);
?>

<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <title>–ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        /* –î–æ–¥–∞–π—Ç–µ —Å–≤–æ—ó —Å—Ç–∏–ª—ñ —Ç—É—Ç */
        .user-profile {
            padding: 20px;
            margin: 20px auto;
            max-width: 960px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        .section-title {
            border-bottom: 2px solid #ccc;
            padding-bottom: 10px;
            margin-bottom: 15px;
            font-size: 1.5rem;
            color: #333;
        }
        /* –°—Ç–∏–ª—ñ –¥–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω—å, —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å, –∫–æ—à–∏–∫–∞ */
        /* ... */
    </style>
</head>
<body>
    <header>
        <div class="container nav-container">
            <nav>
                <ul class="nav-left">
                    <li><a href="index.php">–ì–æ–ª–æ–≤–Ω–∞</a></li>
                    <li><a href="allbooks.php">–£—Å—ñ –∫–Ω–∏–≥–∏</a></li>
                    <li><a href="popular.php">–ü–æ–ø—É–ª—è—Ä–Ω–µ</a></li>
                    <li><a href="discounts.php">–ó–Ω–∏–∂–∫–∏</a></li>
                </ul>
                <div class="nav-right">
                    <div class="auth-section">
                        <span>–í—ñ—Ç–∞—î–º–æ, <?= htmlspecialchars($user->getUsername()); ?>!</span>
                        <a href="cart.php" class="cart-link">üõí (<span id="cart-count"><?= count($cartItems); ?></span>)</a>
                        <a href="user.php" class="active">–ü—Ä–æ—Ñ—ñ–ª—å</a>
                        <button class="logout" onclick="window.location.href='logout.php'">–í–∏–π—Ç–∏</button>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <main class="container user-profile">
        <section>
            <h2 class="section-title">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</h2>
            <?php if ($user): ?>
                <p>–Ü–º'—è: <?= htmlspecialchars($user->getUsername()); ?></p>
                <p>Email: <?= htmlspecialchars($user->getEmail()); ?></p>
                <p><a href="edit_profile.php">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å</a></p>
            <?php else: ?>
                <p>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.</p>
            <?php endif; ?>
        </section>

        <section>
            <h2 class="section-title">–Ü—Å—Ç–æ—Ä—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω—å</h2>
            <?php if (!empty($orders)): ?>
                <ul>
                    <?php foreach ($orders as $order): ?>
                        <li>
                            –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ<?= htmlspecialchars($order->getId()); ?> –≤—ñ–¥ <?= htmlspecialchars($order->getOrderDate()); ?> - –°—Ç–∞—Ç—É—Å: <?= htmlspecialchars($order->getStatus()); ?> - –°—É–º–∞: <?= htmlspecialchars($order->getTotalAmount()); ?> –≥—Ä–Ω
                            <a href="order_details.php?id=<?= htmlspecialchars($order->getId()); ?>">–î–µ—Ç–∞–ª—ñ</a>
                        </li>
                    <?php endforeach; ?>
                </ul>
            <?php else: ?>
                <p>–ù–µ–º–∞—î –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å.</p>
            <?php endif; ?>
        </section>

        <section>
            <h2 class="section-title">–°–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å</h2>
            <?php if (!empty($wishlistItems)): ?>
                <div class="wishlist-grid">
                    <?php foreach ($wishlistItems as $item): ?>
                        <div class="wishlist-item">
                            <a href="book.php?id=<?= htmlspecialchars($item->getBook()->getId()); ?>">
                                <img src="images/<?= htmlspecialchars($item->getBook()->getCoverImage()); ?>" alt="<?= htmlspecialchars($item->getBook()->getTitle()); ?>">
                            </a>
                            <p><?= htmlspecialchars($item->getBook()->getTitle()); ?></p>
                            <button class="add-to-cart" data-book-id="<?= htmlspecialchars($item->getBook()->getId()); ?>">–î–æ –∫–æ—à–∏–∫–∞</button>
                            <button class="remove-from-wishlist" data-item-id="<?= htmlspecialchars($item->getId()); ?>">–í–∏–¥–∞–ª–∏—Ç–∏</button>
                        </div>
                    <?php endforeach; ?>
                </div>
            <?php else: ?>
                <p>–í–∞—à —Å–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>
            <?php endif; ?>
        </section>

      

        </main>
    <footer>
        ¬© 2025 –ö–Ω–∏–≥–∞—Ä–Ω—è
    </footer>
    <script>
        // JavaScript –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –¥—ñ–π (–¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –∫–æ—à–∏–∫–∞, –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ –±–∞–∂–∞–Ω—å/–∫–æ—à–∏–∫–∞, –∑–º—ñ–Ω–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ)
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('add-to-cart')) {
                const bookId = e.target.dataset.bookId;
                // AJAX-–∑–∞–ø–∏—Ç –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –∫–æ—à–∏–∫–∞
                fetch('/bookshop/bookshop/public/add_to_cart.php', { // –®–ª—è—Ö –º–æ–∂–µ –±—É—Ç–∏ —ñ–Ω—à–∏–º
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id: bookId, quantity: 1 })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('–ö–Ω–∏–≥–∞ –¥–æ–¥–∞–Ω–∞ –¥–æ –∫–æ—à–∏–∫–∞!');
                        // –û–Ω–æ–≤—ñ—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ (–∫—ñ–ª—å–∫—ñ—Å—Ç—å)
                        const cartCountElement = document.getElementById('cart-count');
                        if (cartCountElement) {
                            cartCountElement.textContent = parseInt(cartCountElement.textContent) + 1;
                        }
                    } else {
                        alert('–ü–æ–º–∏–ª–∫–∞: ' + data.error);
                    }
                });
            } else if (e.target.classList.contains('remove-from-wishlist')) {
                const itemId = e.target.dataset.itemId;
                // AJAX-–∑–∞–ø–∏—Ç –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑—ñ —Å–ø–∏—Å–∫—É –±–∞–∂–∞–Ω—å
                fetch('/bookshop/bookshop/public/remove_from_wishlist.php', { // –®–ª—è—Ö –º–æ–∂–µ –±—É—Ç–∏ —ñ–Ω—à–∏–º
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id: itemId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        e.target.closest('.wishlist-item').remove();
                        if (document.querySelectorAll('.wishlist-item').length === 0) {
                            document.querySelector('.wishlist-grid').innerHTML = '<p>–í–∞—à —Å–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>';
                        }
                    } else {
                        alert('–ü–æ–º–∏–ª–∫–∞: ' + data.error);
                    }
                });
            } else if (e.target.classList.contains('remove-from-cart')) {
                const itemId = e.target.dataset.itemId;
                // AJAX-–∑–∞–ø–∏—Ç –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ –∫–æ—à–∏–∫–∞
                fetch('/bookshop/bookshop/public/remove_from_cart.php', { // –®–ª—è—Ö –º–æ–∂–µ –±—É—Ç–∏ —ñ–Ω—à–∏–º
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id: itemId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        e.target.closest('tr').remove();
                        // –û–Ω–æ–≤—ñ—Ç—å –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∫–æ—à–∏–∫–∞
                        fetch('/bookshop/bookshop/public/get_cart_total.php') // –®–ª—è—Ö –º–æ–∂–µ –±—É—Ç–∏ —ñ–Ω—à–∏–º
                            .then(res => res.json())
                            .then(totalData => {
                                const totalElement = document.querySelector('.user-profile tfoot td:last-child');
                                if (totalElement) {
                                    totalElement.textContent = totalData.total + ' –≥—Ä–Ω';
                                }
                                // –û–Ω–æ–≤—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤ —ñ–∫–æ–Ω—Ü—ñ –∫–æ—à–∏–∫–∞
                                const cartCountElement = document.getElementById('cart-count');
                                if (cartCountElement) {
                                    cartCountElement.textContent = parseInt(cartCountElement.textContent) - 1;
                                    if (parseInt(cartCountElement.textContent) === 0) {
                                        document.querySelector('.user-profile section:last-child').innerHTML = '<p>–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>';
                                    }
                                }
                            });
                    } else {
                        alert('–ü–æ–º–∏–ª–∫–∞: ' + data.error);
                    }
                });
            }
        });

        document.addEventListener('change', function(e) {
            if (e.target.classList.contains('cart-quantity')) {
                const itemId = e.target.dataset.itemId;
                const quantity = e.target.value;
                // AJAX-–∑–∞–ø–∏—Ç –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤ –∫–æ—à–∏–∫—É
                fetch('/bookshop/bookshop/public/update_cart_quantity.php', { // –®–ª—è—Ö –º–æ–∂–µ –±—É—Ç–∏ —ñ–Ω—à–∏–º
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id: itemId, quantity: quantity })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // –û–Ω–æ–≤—ñ—Ç—å —Å—É–º—É —Ä—è–¥–∫–∞ —Ç–∞ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∫–æ—à–∏–∫–∞
                        const row = e.target.closest('tr');
                        const price = parseFloat(row.querySelector('td:nth-child(3)').textContent);
                        row.querySelector('td:nth-child(4)').textContent = (price * quantity).toFixed(2) + ' –≥—Ä–Ω';
                        fetch('/bookshop/bookshop/public/get_cart_total.php') // –®–ª—è—Ö –º–æ–∂–µ –±—É—Ç–∏ —ñ–Ω—à–∏–º
                            .then(res => res.json())
                            .then(totalData => {
                                const totalElement = document.querySelector('.user-profile tfoot td:last-child');
                                if (totalElement) {
                                    totalElement.textContent = totalData.total + ' –≥—Ä–Ω';
                                }
                            });
                    } else {
                        alert('–ü–æ–º–∏–ª–∫–∞: ' + data.error);
                        e.target.dataset.originalValue = quantity; // –ó–±–µ—Ä–µ–∂—ñ—Ç—å –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –º–æ–∂–ª–∏–≤–æ–≥–æ –≤—ñ–¥–∫–∞—Ç—É
            }
        });
    </script>
</body>
</html>